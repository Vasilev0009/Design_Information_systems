# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI/CD Pipeline

on:
  push:
    branches: [ main, master ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    # Шаг 1: Получаем код из репозитория
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Шаг 2: Устанавливаем Java
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    # Шаг 3: Собираем JAR-файл (без тестов)
    - name: Build JAR file
      run: mvn -B clean package -DskipTests
      
    # Шаг 4: Получаем версию из pom.xml
    - name: Get version from pom.xml
      id: get_version
      run: |
        # Вытаскиваем версию из pom.xml
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "📦 Found version: ${VERSION}"
        
    # Шаг 5: Создаем релиз на GitHub
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        release_name: Release v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        body: |
          Выпущен новый релиз
          
          📅 Дата: $(date +'%Y-%m-%d %H:%M')
          🔥 Коммит: ${{ github.sha }}
          👤 Автор: ${{ github.actor }}
        
    # Шаг 6: Загружаем JAR-файл в релиз
    - name: Upload JAR to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/*.jar
        asset_name: my-app-${{ steps.get_version.outputs.VERSION }}.jar
        asset_content_type: application/java-archive
        
    # Шаг 7: Отчет
    - name: Show success message
      run: |
        echo "✅ Релиз успешно создан!"
        echo "📦 Версия: ${{ steps.get_version.outputs.VERSION }}"
        echo "🏷️ Тег: v${{ steps.get_version.outputs.VERSION }}"
        echo "📎 JAR-файл: my-app-${{ steps.get_version.outputs.VERSION }}.jar"
        echo "🔗 Ссылка: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.get_version.outputs.VERSION }}"

         # Шаг 7: Отчет в Summary
    - name: Create detailed summary
      run: |
        echo "## 🎉 Автоматический релиз успешно создан!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Детали релиза" >> $GITHUB_STEP_SUMMARY
        echo "- **Версия**: ${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Тег**: v${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **JAR-файл**: my-app-${{ steps.get_version.outputs.VERSION }}.jar" >> $GITHUB_STEP_SUMMARY
        echo "- **Статус**: ✅ Успешно" >> $GITHUB_STEP_SUMMARY
        echo "- **Создан**: $(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_STEP_SUMMARY
        echo "- **Коммит**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Автор**: @${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Полезные ссылки" >> $GITHUB_STEP_SUMMARY
        echo "- [📦 Скачать JAR](https://github.com/${{ github.repository }}/releases/download/v${{ steps.get_version.outputs.VERSION }}/my-app-${{ steps.get_version.outputs.VERSION }}.jar)" >> $GITHUB_STEP_SUMMARY
        echo "- [📋 Посмотреть релиз](https://github.com/${{ github.repository }}/releases/tag/v${{ steps.get_version.outputs.VERSION }})" >> $GITHUB_STEP_SUMMARY
        echo "- [🌐 Весь код репозитория](https://github.com/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🚀 Следующие шаги" >> $GITHUB_STEP_SUMMARY
        echo "1. Скачайте JAR-файл по ссылке выше" >> $GITHUB_STEP_SUMMARY
        echo "2. Проверьте работу приложения" >> $GITHUB_STEP_SUMMARY
        echo "3. Для следующего релиза измените версию в pom.xml" >> $GITHUB_STEP_SUMMARY

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6